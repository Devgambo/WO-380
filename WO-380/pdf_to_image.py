import convertapi
import os

def pdf_to_image(pdf_path, output_image="output.jpg", page_number=1, zoom=2):
    """
    Convert a PDF page to an image using ConvertAPI for better quality.
    :param pdf_path: Path to PDF file
    :param output_image: Path to save image (relative to convertedimages folder)
    :param page_number: 1-based page index
    :param zoom: Scaling factor for better resolution (not used with ConvertAPI)
    """
    # Set API credentials
    convertapi.api_credentials = 'aBz9UREHrwKK9PJYzySVYSRBrIH7zuPi'
    
    # Ensure the PDF file exists
    if not os.path.exists(pdf_path):
        raise FileNotFoundError(f"PDF file not found: {pdf_path}")
    
    # Create convertedimages directory if it doesn't exist
    converted_images_dir = "convertedimages"
    if not os.path.exists(converted_images_dir):
        os.makedirs(converted_images_dir)
    
    # Get the directory for output (use convertedimages folder)
    output_dir = converted_images_dir
    output_filename = os.path.basename(output_image)
    
    # Convert PDF to image with high quality settings
    result = convertapi.convert('jpg', {
        'File': pdf_path,
        'PageRange': str(page_number),  # Convert specific page
        'ImageResolution': '800',       # High resolution
        'ImageQuality': '100'           # Maximum quality
    }, from_format='pdf')
    
    # Save the converted image
    result.save_files(output_dir)
    
    # Find the generated file (ConvertAPI might add suffixes)
    generated_files = [f for f in os.listdir(output_dir) if f.endswith('.jpg') and f.startswith(os.path.splitext(output_filename)[0])]
    
    if generated_files:
        # Use the first generated file
        final_path = os.path.join(output_dir, generated_files[0])
        # Create the full output path in convertedimages folder
        full_output_path = os.path.join(output_dir, output_filename)
        # Rename to desired output name if different
        if final_path != full_output_path:
            os.rename(final_path, full_output_path)
        return full_output_path
    else:
        raise RuntimeError("No image file was generated by ConvertAPI")


